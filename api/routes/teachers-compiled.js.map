{"version":3,"sources":["teachers.js"],"names":[],"mappings":"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","file":"teachers-compiled.js","sourcesContent":["/**\r\n * Created by jonathan on 03/03/16.\r\n */\r\n'use strict';\r\n\r\nmodule.exports =  (express, io) => {\r\n\r\n    const router = express.Router();\r\n    const auth = require('../auth/auth');\r\n    const teachersController = require('../controller/teachers-controller');\r\n    const utils = require('../utils/utils');\r\n\r\n    io.on('connection',  (socket) => {\r\n        console.log('Connection on Teachers');\r\n        /*socket.on('big', ()=> {\r\n         console.log('big');\r\n         });\r\n         socket.emit('get', { 'get':'Express' });*/\r\n    });\r\n\r\n    /* Middleware for authentication */\r\n    router.use( (req, res, next) => {\r\n        return auth.ensureAuthenticated(req, res, next);\r\n    });\r\n\r\n    /* GET Teacher listing. */\r\n    router.get('/',  (req, res) => {\r\n        teachersController.listTeachers()\r\n            .then( (teachers) => {\r\n                res.json({\r\n                    success: true,\r\n                    data: teachers\r\n                });\r\n            })\r\n            .catch( (err) => {\r\n                res.json({\r\n                    success: false,\r\n                    data: err\r\n                });\r\n            });\r\n\r\n    });\r\n\r\n    /* GET Teacher by ID. */\r\n    router.get('/:id',  (req, res) => {\r\n        let teacher = {\r\n            _id: req.params.id || ''\r\n        };\r\n\r\n        teachersController.validateTeacher(teacher, utils.OPERATION_STATUS.SELECT)\r\n            .then( (item) => {\r\n                return teachersController.getById(item['_id'])\r\n            })\r\n            .then( (teacher) => {\r\n                if (teacher) {\r\n                    res.json({\r\n                        success: true,\r\n                        data: teacher\r\n                    });\r\n                } else {\r\n                    res.status(404).json({\r\n                        success: false,\r\n                        data: '404 - Not Found'\r\n                    });\r\n                }\r\n            })\r\n            .catch( (err) => {\r\n                res.json({\r\n                    success: false,\r\n                    data: err\r\n                });\r\n            });\r\n    });\r\n\r\n    /* POST create a Teacher */\r\n    router.post('/',  (req, res) => {\r\n        let teacher = {\r\n            identify: req.body.identify || '',\r\n            name: req.body.name || '',\r\n            gender: req.body.gender || '',\r\n            dob: req.body.dob || '',\r\n            active: req.body.active || '1',\r\n            social_number: req.body.social_number || ''\r\n        };\r\n\r\n        teachersController.validateTeacher(teacher, utils.OPERATION_STATUS.NEW)\r\n            .then(teachersController.createTeacher)\r\n            .then( (result) => {\r\n                res.json({\r\n                    success: true,\r\n                    data: result\r\n                });\r\n            })\r\n            .catch( (err) => {\r\n                res.json({\r\n                    success: false,\r\n                    data: err\r\n                });\r\n            });\r\n    });\r\n\r\n\r\n    /* PUT update a Teacher */\r\n    router.put('/',  (req, res) => {\r\n        let teacher = {\r\n            _id: req.body._id || '',\r\n            identify: req.body.identify || '',\r\n            name: req.body.name || '',\r\n            gender: req.body.gender || '',\r\n            dob: req.body.dob || '',\r\n            active: req.body.active || '1',\r\n            social_number: req.body.social_number || ''\r\n        };\r\n\r\n        teachersController.validateTeacher(teacher, utils.OPERATION_STATUS.UPDATE)\r\n            .then(teachersController.updateTeacher)\r\n            .then( (result) => {\r\n                res.json({\r\n                    success: true,\r\n                    data: result\r\n                });\r\n            })\r\n            .catch( (err) => {\r\n                res.json({\r\n                    success: false,\r\n                    data: err\r\n                });\r\n            });\r\n    });\r\n\r\n\r\n    /* DELETE remove a Teacher by ID. */\r\n    router.delete('/:id',  (req, res) => {\r\n        let teacher = {\r\n            _id: req.params.id || ''\r\n        };\r\n\r\n        teachersController.validateTeacher(teacher, utils.OPERATION_STATUS.DELETE)\r\n            .then( (pteacher) => {\r\n                return teachersController.removeById(pteacher['_id'])\r\n            })\r\n            .then( (result) => {\r\n                if (result) {\r\n                    res.json({\r\n                        success: true,\r\n                        data: result\r\n                    });\r\n                } else {\r\n                    res.status(404).json({\r\n                        success: false,\r\n                        data: '404 - Not Found'\r\n                    });\r\n                }\r\n            })\r\n            .catch( (err) => {\r\n                res.json({\r\n                    success: false,\r\n                    data: err\r\n                });\r\n            });\r\n    });\r\n\r\n\r\n    /* POST add a Subject. */\r\n    router.post('/:id/add-subject',  (req, res) => {\r\n        let subject = {\r\n            _id: req.params.id || '',\r\n            _idsubject: req.body._idsubject || '',\r\n            description: req.body.description || ''\r\n        };\r\n\r\n        teachersController.addSubject(subject)\r\n            .then( (teacher) => {\r\n                res.json({\r\n                    success: true,\r\n                    data: teacher\r\n                });\r\n            })\r\n            .catch( (err) => {\r\n                res.json({\r\n                    success: false,\r\n                    data: err\r\n                });\r\n            });\r\n    });\r\n\r\n\r\n    /* DELETE remove a subject. */\r\n    router.delete('/:id/remove-subject/:idsubject',  (req, res) => {\r\n        let subject = {\r\n            _id: req.params.id || '',\r\n            _idsubject: req.params.idsubject || ''\r\n        };\r\n\r\n        teachersController.removeSubject(subject)\r\n            .then( (teacher) => {\r\n                res.json({\r\n                    success: true,\r\n                    data: teacher\r\n                });\r\n            })\r\n            .catch( (err) => {\r\n                res.json({\r\n                    success: false,\r\n                    data: err\r\n                });\r\n            });\r\n    });\r\n\r\n    /* POST add a schedule. */\r\n    router.post('/:id/add-schedule',  (req, res) => {\r\n        let duration = {\r\n            start: '',\r\n            end: ''\r\n        };\r\n\r\n        duration.start = (req.body.duration && req.body.duration.start || '');\r\n        duration.end = (req.body.duration && req.body.duration.end || '');\r\n\r\n        let item = {\r\n            _id: req.params.id || '',\r\n            day: req.body.day || '',\r\n            duration: duration\r\n        };\r\n\r\n\r\n        teachersController.addSchedule(item)\r\n            .then( (course) => {\r\n                res.json({\r\n                    success: true,\r\n                    data: course\r\n                });\r\n            })\r\n            .catch( (err) => {\r\n                res.json({\r\n                    success: false,\r\n                    data: err\r\n                });\r\n            });\r\n    });\r\n\r\n    /* DELETE remove a schedule. */\r\n    router.delete('/:id/remove-schedule/:idschedule',  (req, res) => {\r\n        let item = {\r\n            _id: req.params.id || '',\r\n            _idschedule: req.params.idschedule || ''\r\n        };\r\n\r\n        teachersController.removeSchedule(item)\r\n            .then( (course) => {\r\n                res.json({\r\n                    success: true,\r\n                    data: course\r\n                });\r\n            })\r\n            .catch( (err) => {\r\n                res.json({\r\n                    success: false,\r\n                    data: err\r\n                });\r\n            });\r\n    });\r\n\r\n    return router;\r\n};"]}