{"version":3,"sources":["users.js"],"names":[],"mappings":"AAAA;;AAEA,OAAO,OAAP,GAAkB,UAAC,OAAD,EAAU,EAAV,EAAiB;;AAEjC,MAAM,SAAS,QAAQ,MAAR,EAAf;AACA,MAAM,OAAO,QAAQ,cAAR,CAAb;AACA,MAAM,kBAAkB,QAAQ,gCAAR,CAAxB;AACA,MAAM,QAAQ,QAAQ,gBAAR,CAAd;;AAEA,KAAG,EAAH,CAAM,YAAN,EAAoB,UAAC,MAAD,EAAW;AAC7B,YAAQ,GAAR,CAAY,oBAAZ;;;;;AAKD,GAND;;;AASA,SAAO,GAAP,CAAW,GAAX,EAAgB,KAAK,mBAArB,EAA2C,UAAC,GAAD,EAAM,GAAN,EAAc;AACvD,oBAAgB,SAAhB,GACK,IADL,CACU,UAAC,KAAD,EAAW;AACf,UAAI,IAAJ,CAAS;AACP,iBAAS,IADF;AAEP,cAAM;AAFC,OAAT;AAID,KANL,EAOK,KAPL,CAOW,UAAC,GAAD,EAAS;AACd,UAAI,IAAJ,CAAS;AACP,iBAAS,KADF;AAEP,cAAM;AAFC,OAAT;AAID,KAZL;AAcD,GAfD;;;AAkBA,SAAO,GAAP,CAAW,MAAX,EAAmB,KAAK,mBAAxB,EAA8C,UAAC,GAAD,EAAM,GAAN,EAAc;AAC1D,QAAI,OAAO;AACT,WAAK,IAAI,MAAJ,CAAW,EAAX,IAAiB;AADb,KAAX;;AAIA,oBAAgB,YAAhB,CAA6B,IAA7B,EAAmC,MAAM,gBAAN,CAAuB,MAA1D,EACK,IADL,CACU,UAAC,KAAD,EAAW;AACb,aAAO,gBAAgB,WAAhB,CAA4B,MAAM,KAAN,CAA5B,CAAP;AACH,KAHL,EAIK,IAJL,CAIU,UAAC,MAAD,EAAY;AAChB,UAAI,MAAJ,EAAY;AACV,YAAI,IAAJ,CAAS;AACP,mBAAS,IADF;AAEP,gBAAM;AAFC,SAAT;AAID,OALD,MAKO;AACL,YAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACnB,mBAAS,KADU;AAEnB,gBAAM;AAFa,SAArB;AAID;AACF,KAhBL,EAiBK,KAjBL,CAiBW,UAAC,GAAD,EAAS;AACd,UAAI,IAAJ,CAAS;AACP,iBAAS,KADF;AAEP,cAAM;AAFC,OAAT;AAID,KAtBL;AAuBD,GA5BD;;;AA+BA,SAAO,GAAP,CAAW,WAAX,EAAwB,KAAK,mBAA7B,EAAmD,UAAC,GAAD,EAAM,GAAN,EAAc;AAC/D,QAAI,OAAO;AACT,WAAK,IAAI,MAAJ,CAAW,EAAX,IAAiB;AADb,KAAX;;AAIA,oBAAgB,YAAhB,CAA6B,IAA7B,EAAmC,MAAM,gBAAN,CAAuB,MAA1D,EACK,IADL,CACU,UAAC,KAAD,EAAW;AACb,aAAO,gBAAgB,WAAhB,CAA4B,MAAM,KAAN,CAA5B,CAAP;AACH,KAHL,EAIK,IAJL,CAIU,UAAC,MAAD,EAAY;AACd,UAAI,MAAJ,EAAY;AACR,YAAI,MAAM;AACR,eAAK,OAAO,GADJ;AAER,iBAAO,OAAO,KAFN;AAGR,oBAAU,OAAO,QAHT;AAIR,sBAAY,OAAO,UAJX;AAKR,mBAAS,OAAO;AALR,SAAV;;AAQA,YAAI,IAAJ,CAAS;AACP,mBAAS,IADF;AAEP,gBAAM;AAFC,SAAT;AAIH,OAbD,MAaO;AACH,YAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACnB,mBAAS,KADU;AAEnB,gBAAM;AAFa,SAArB;AAIH;AACJ,KAxBL,EAyBK,KAzBL,CAyBW,UAAC,GAAD,EAAS;AACZ,UAAI,IAAJ,CAAS;AACP,iBAAS,KADF;AAEP,cAAM;AAFC,OAAT;AAIH,KA9BL;AAgCD,GArCD;;;AAyCA,SAAO,GAAP,CAAW,eAAX,EAA4B,KAAK,mBAAjC,EAAuD,UAAC,GAAD,EAAM,GAAN,EAAc;AACnE,QAAI,OAAO;AACT,WAAK,IAAI,MAAJ,CAAW,EAAX,IAAiB;AADb,KAAX;;AAIA,oBAAgB,YAAhB,CAA6B,IAA7B,EAAmC,MAAM,gBAAN,CAAuB,MAA1D,EACK,IADL,CACU,UAAC,KAAD,EAAW;AACb,aAAO,gBAAgB,kBAAhB,CAAmC,MAAM,KAAN,CAAnC,CAAP;AACH,KAHL,EAIK,IAJL,CAIU,UAAC,MAAD,EAAY;AACd,UAAI,MAAJ,EAAY;AACR,YAAI,IAAJ,CAAS;AACP,mBAAS,IADF;AAEP,gBAAM;AAFC,SAAT;AAIH,OALD,MAKO;AACH,YAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACnB,mBAAS,KADU;AAEnB,gBAAM;AAFa,SAArB;AAIH;AACJ,KAhBL,EAiBK,KAjBL,CAiBW,UAAC,GAAD,EAAS;AACZ,UAAI,IAAJ,CAAS;AACP,iBAAS,KADF;AAEP,cAAM;AAFC,OAAT;AAIH,KAtBL;AAuBD,GA5BD;;;AA+BA,SAAO,IAAP,CAAY,GAAZ,EAAkB,UAAC,GAAD,EAAM,GAAN,EAAc;AAC9B,QAAI,OAAO;AACT,aAAO,IAAI,IAAJ,CAAS,KAAT,IAAkB,EADhB;AAET,gBAAU,IAAI,IAAJ,CAAS,QAAT,IAAqB,EAFtB;AAGT,gBAAU,IAAI,IAAJ,CAAS,QAAT,IAAqB,EAHtB;AAIT,mBAAa,IAAI,IAAJ,CAAS,WAAT,IAAwB,EAJ5B;AAKT,cAAQ,IAAI,IAAJ,CAAS,MAAT,IAAmB;AALlB,KAAX;;AAQA,oBAAgB,YAAhB,CAA6B,IAA7B,EAAmC,MAAM,gBAAN,CAAuB,GAA1D,EACK,IADL,CACU,gBAAgB,UAD1B,EAEK,IAFL,CAEU,UAAC,MAAD,EAAY;AACd,UAAI,IAAJ,CAAS;AACP,iBAAS,IADF;AAEP,cAAM;AAFC,OAAT;AAIH,KAPL,EAQK,KARL,CAQW,UAAC,GAAD,EAAS;AACZ,UAAI,IAAJ,CAAS;AACP,iBAAS,KADF;AAEP,cAAM;AAFC,OAAT;AAIH,KAbL;AAcD,GAvBD;;;AA2BA,SAAO,GAAP,CAAW,GAAX,EAAgB,KAAK,mBAArB,EAA2C,UAAC,GAAD,EAAM,GAAN,EAAc;AACvD,QAAI,OAAO;AACT,WAAK,IAAI,IAAJ,CAAS,GAAT,IAAgB,EADZ;AAET,aAAO,IAAI,IAAJ,CAAS,KAAT,IAAkB,EAFhB;AAGT,gBAAU,IAAI,IAAJ,CAAS,QAAT,IAAqB,EAHtB;AAIT,gBAAU,IAAI,IAAJ,CAAS,QAAT,IAAqB,EAJtB;AAKT,mBAAa,IAAI,IAAJ,CAAS,WAAT,IAAwB,EAL5B;AAMT,cAAQ,IAAI,IAAJ,CAAS,MAAT,IAAmB;AANlB,KAAX;;AASA,oBAAgB,YAAhB,CAA6B,IAA7B,EAAmC,MAAM,gBAAN,CAAuB,GAA1D,EACK,IADL,CACU,gBAAgB,UAD1B,EAEK,IAFL,CAEU,UAAC,MAAD,EAAY;AACd,UAAI,IAAJ,CAAS;AACP,iBAAS,IADF;AAEP,cAAM;AAFC,OAAT;AAIH,KAPL,EAQK,KARL,CAQW,UAAC,GAAD,EAAS;AACZ,UAAI,IAAJ,CAAS;AACP,iBAAS,KADF;AAEP,cAAM;AAFC,OAAT;AAIH,KAbL;AAcD,GAxBD;;;AA4BA,SAAO,MAAP,CAAc,MAAd,EAAsB,KAAK,mBAA3B,EAAiD,UAAC,GAAD,EAAM,GAAN,EAAc;AAC7D,QAAI,OAAO;AACT,WAAK,IAAI,MAAJ,CAAW,EAAX,IAAiB;AADb,KAAX;;AAIA,oBAAgB,YAAhB,CAA6B,IAA7B,EAAmC,MAAM,gBAAN,CAAuB,MAA1D,EACK,IADL,CACU,UAAC,KAAD,EAAW;AACf,aAAO,gBAAgB,UAAhB,CAA2B,MAAM,KAAN,CAA3B,CAAP;AACD,KAHL,EAIK,IAJL,CAIU,UAAC,MAAD,EAAY;AAChB,UAAI,MAAJ,EAAY;AACV,YAAI,IAAJ,CAAS;AACP,mBAAS,IADF;AAEP,gBAAM;AAFC,SAAT;AAID,OALD,MAKO;AACL,YAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACnB,mBAAS,KADU;AAEnB,gBAAM;AAFa,SAArB;AAID;AACF,KAhBL,EAiBK,KAjBL,CAiBW,UAAC,GAAD,EAAS;AACd,UAAI,IAAJ,CAAS;AACP,iBAAS,KADF;AAEP,cAAM;AAFC,OAAT;AAID,KAtBL;AAuBD,GA5BD;;;AA+BA,SAAO,IAAP,CAAY,aAAZ,EAA2B,KAAK,mBAAhC,EAAsD,UAAC,GAAD,EAAM,GAAN,EAAc;AAClE,QAAI,OAAO;AACT,WAAK,IAAI,IAAJ,CAAS,GAAT,IAAgB,EADZ;AAET,gBAAU,IAAI,IAAJ,CAAS,QAAT,IAAqB,EAFtB;AAGT,YAAM,IAAI,IAAJ,CAAS,IAAT,IAAiB;AAHd,KAAX;;AAMA,oBAAgB,cAAhB,CAA+B,IAA/B,EACK,IADL,CACW,UAAC,IAAD,EAAU;AACf,UAAI,IAAJ,EAAU;AACR,YAAI,IAAJ,CAAS;AACP,mBAAS,IADF;AAEP,gBAAM;AAFC,SAAT;AAID,OALD,MAKO;AACL,YAAI,MAAJ,CAAW,GAAX,EAAgB,IAAhB,CAAqB;AACnB,mBAAS,KADU;AAEnB,gBAAM;AAFa,SAArB;AAID;AACF,KAbL,EAcK,KAdL,CAcW,UAAC,GAAD,EAAS;AACd,UAAI,IAAJ,CAAS;AACP,iBAAS,KADF;AAEP,cAAM;AAFC,OAAT;AAID,KAnBL;AAqBD,GA5BD;;AA8BA,SAAO,MAAP;AAED,CA/PD","file":"users-compiled.js","sourcesContent":["'use strict';\n\nmodule.exports =  (express, io) => {\n\n  const router = express.Router();\n  const auth = require('../auth/auth');\n  const usersController = require('../controller/users-controller');\n  const utils = require('../utils/utils');\n\n  io.on('connection', (socket)=> {\n    console.log('Connection on User');\n    /*socket.on('big', ()=> {\n      console.log('big');\n    });\n    socket.emit('get', { 'get':'Express' });*/\n  });\n\n  /* GET users listing. */\n  router.get('/', auth.ensureAuthenticated,  (req, res) => {\n    usersController.listUsers()\n        .then((users) => {\n          res.json({\n            success: true,\n            data: users\n          });\n        })\n        .catch((err) => {\n          res.json({\n            success: false,\n            data: err\n          });\n        });\n\n  });\n\n  /* GET user by ID. */\n  router.get('/:id', auth.ensureAuthenticated,  (req, res) => {\n    let user = {\n      _id: req.params.id || ''\n    };\n\n    usersController.validateUser(user, utils.OPERATION_STATUS.SELECT)\n        .then((ruser) => {\n            return usersController.getUserById(ruser['_id']);\n        })\n        .then((result) => {\n          if (result) {\n            res.json({\n              success: true,\n              data: result\n            });\n          } else {\n            res.status(404).json({\n              success: false,\n              data: '404 - Not Found'\n            });\n          }\n        })\n        .catch((err) => {\n          res.json({\n            success: false,\n            data: err\n          });\n        });\n  });\n\n  /* GET user by ID. */\n  router.get('/view/:id', auth.ensureAuthenticated,  (req, res) => {\n    let user = {\n      _id: req.params.id || ''\n    };\n\n    usersController.validateUser(user, utils.OPERATION_STATUS.SELECT)\n        .then((ruser) => {\n            return usersController.getUserById(ruser['_id']);\n        })\n        .then((result) => {\n            if (result) {\n                let usr = {\n                  _id: result._id,\n                  email: result.email,\n                  username: result.username,\n                  last_login: result.last_login,\n                  persons: result.persons\n                };\n\n                res.json({\n                  success: true,\n                  data: usr\n                });\n            } else {\n                res.status(404).json({\n                  success: false,\n                  data: '404 - Not Found'\n                });\n            }\n        })\n        .catch((err) => {\n            res.json({\n              success: false,\n              data: err\n            });\n        });\n\n  });\n\n\n  /* GET user by ID. */\n  router.get('/all-path/:id', auth.ensureAuthenticated,  (req, res) => {\n    let user = {\n      _id: req.params.id || ''\n    };\n\n    usersController.validateUser(user, utils.OPERATION_STATUS.SELECT)\n        .then((ruser) => {\n            return usersController.getUserByIdAllPath(ruser['_id']);\n        })\n        .then((result) => {\n            if (result) {\n                res.json({\n                  success: true,\n                  data: result\n                });\n            } else {\n                res.status(404).json({\n                  success: false,\n                  data: '404 - Not Found'\n                });\n            }\n        })\n        .catch((err) => {\n            res.json({\n              success: false,\n              data: err\n            });\n        });\n  });\n\n  /* POST create a new user */\n  router.post('/',  (req, res) => {\n    let user = {\n      email: req.body.email || '',\n      username: req.body.username || '',\n      password: req.body.password || '',\n      passwordbis: req.body.passwordbis || '',\n      active: req.body.active || '1'\n    };\n\n    usersController.validateUser(user, utils.OPERATION_STATUS.NEW)\n        .then(usersController.createUser)\n        .then((result) => {\n            res.json({\n              success: true,\n              data: result\n            });\n        })\n        .catch((err) => {\n            res.json({\n              success: false,\n              data: err\n            });\n        });\n  });\n\n\n  /* PUT update a user */\n  router.put('/', auth.ensureAuthenticated,  (req, res) => {\n    let user = {\n      _id: req.body._id || '',\n      email: req.body.email || '',\n      username: req.body.username || '',\n      password: req.body.password || '',\n      passwordbis: req.body.passwordbis || '',\n      active: req.body.active || ''\n    };\n\n    usersController.validateUser(user, utils.OPERATION_STATUS.NEW)\n        .then(usersController.updateUser)\n        .then((result) => {\n            res.json({\n              success: true,\n              data: result\n            });\n        })\n        .catch((err) => {\n            res.json({\n              success: false,\n              data: err\n            });\n        });\n  });\n\n\n  /* DELETE remove a user by ID. */\n  router.delete('/:id', auth.ensureAuthenticated,  (req, res) => {\n    let user = {\n      _id: req.params.id || ''\n    };\n\n    usersController.validateUser(user, utils.OPERATION_STATUS.DELETE)\n        .then((ruser) => {\n          return usersController.removeById(ruser['_id']);\n        })\n        .then((result) => {\n          if (result) {\n            res.json({\n              success: true,\n              data: result\n            });\n          } else {\n            res.status(404).json({\n              success: false,\n              data: '404 - Not Found'\n            });\n          }\n        })\n        .catch((err) => {\n          res.json({\n            success: false,\n            data: err\n          });\n        });\n  });\n\n  /* POST add a person to User */\n  router.post('/add-person', auth.ensureAuthenticated,  (req, res) => {\n    let user = {\n      _id: req.body._id || '',\n      idparent: req.body.idparent || '',\n      type: req.body.type || ''\n    };\n\n    usersController.setLoginPerson(user)\n        .then( (user) => {\n          if (user) {\n            res.json({\n              success: true,\n              data: \"Login vinculado com sucesso.\"\n            });\n          } else {\n            res.status(404).json({\n              success: false,\n              data: '404 - Not Found'\n            });\n          }\n        })\n        .catch((err) => {\n          res.json({\n            success: false,\n            data: err\n          });\n        });\n\n  });\n\n  return router;\n\n};"]}