{"version":3,"sources":["auth.js"],"names":[],"mappings":";;;AAGA;;AACA,OAAO,OAAP,GAAkB,UAAC,OAAD,EAAU,EAAV,EAAiB;;AAE/B,QAAM,SAAS,QAAQ,MAAR,EAAf;AACA,QAAM,OAAO,QAAQ,cAAR,CAAb;AACA,QAAM,iBAAiB,QAAQ,+BAAR,CAAvB;;AAEA,OAAG,EAAH,CAAM,YAAN,EAAoB,UAAC,MAAD,EAAY;AAC5B,gBAAQ,GAAR,CAAY,oBAAZ;;;;;AAKH,KAND;;AAQA,WAAO,IAAP,CAAY,eAAZ,EAA8B,UAAC,GAAD,EAAM,GAAN,EAAc;AACxC,YAAI,OAAO;AACP,mBAAO,IAAI,IAAJ,CAAS,QAAT,IAAqB,EADrB;AAEP,sBAAU,IAAI,IAAJ,CAAS,QAAT,IAAqB;AAFxB,SAAX;;AAKA,uBAAe,eAAf,CAA+B,IAA/B,EACK,IADL,CACU,eAAe,eADzB,EAEK,IAFL,CAEU,eAAe,SAFzB,EAGK,IAHL,CAGW,UAAC,EAAD,EAAQ;AACX,gBAAI,MAAM;AACN,qBAAK,GAAG,IAAH,CAAQ,GADP;AAEN,uBAAO,GAAG,IAAH,CAAQ,KAFT;AAGN,0BAAU,GAAG,IAAH,CAAQ,QAHZ;AAIN,4BAAY,GAAG,IAAH,CAAQ,UAJd;AAKN,4BAAY,GAAG,IAAH,CAAQ,UALd;AAMN,6BAAa,GAAG,IAAH,CAAQ,WANf;AAON,4BAAY,GAAG,IAAH,CAAQ,UAPd;AAQN,2BAAW,GAAG,IAAH,CAAQ;AARb,aAAV;AAUA,gBAAI,IAAJ,CAAS;AACL,yBAAS,IADJ;AAEL,uBAAO,GAAG,KAFL;AAGL,sBAAM,GAHD;AAIL,yBAAS;AAJJ,aAAT;AAMH,SApBL,EAqBK,KArBL,CAqBY,UAAC,GAAD,EAAS;AACb,gBAAI,IAAJ,CAAS,GAAT;AACH,SAvBL;AAwBH,KA9BD;;AAiCA,WAAO,GAAP,CAAW,aAAX,EAA0B,KAAK,mBAA/B,EAAqD,UAAC,GAAD,EAAM,GAAN,EAAc;AAC/D,YAAI,IAAJ,CAAS;AACL,qBAAS,IADJ;AAEL,wBAAY,IAAI;AAFX,SAAT;AAIH,KALD;;AAOA,WAAO,MAAP;AAEH,CAxDD","file":"auth-compiled.js","sourcesContent":["/*\n * Created by jonathan on 21/02/16.\n */\n'use strict';\nmodule.exports =  (express, io) => {\n\n    const router = express.Router();\n    const auth = require('../auth/auth');\n    const authController = require('../controller/auth-controller');\n\n    io.on('connection', (socket) => {\n        console.log('Connection on Auth');\n        /*socket.on('big', ()=> {\n         console.log('big');\n         });\n         socket.emit('get', { 'get':'Express' });*/\n    });\n\n    router.post('/authenticate',  (req, res) => {\n        let user = {\n            login: req.body.username || '',\n            password: req.body.password || ''\n        };\n\n        authController.verifyLoginUser(user)\n            .then(authController.lastUpdateLogin)\n            .then(authController.loginUser)\n            .then( (ut) => {\n                let usr = {\n                    _id: ut.user._id,\n                    email: ut.user.email,\n                    username: ut.user.username,\n                    last_login: ut.user.last_login,\n                    student_id: ut.user.student_id,\n                    teachers_id: ut.user.teachers_id,\n                    manager_id: ut.user.manager_id,\n                    master_id: ut.user.master_id\n                };\n                res.json({\n                    success: true,\n                    token: ut.token,\n                    user: usr,\n                    message: 'Enjoy your token'\n                });\n            })\n            .catch( (err) => {\n                res.json(err);\n            });\n    });\n\n\n    router.get('/credential', auth.ensureAuthenticated,  (req, res) => {\n        res.json({\n            success: true,\n            credential: req.decoded\n        })\n    });\n\n    return router;\n\n};"]}