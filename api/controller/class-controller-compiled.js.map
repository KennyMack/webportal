{"version":3,"sources":["class-controller.js"],"names":[],"mappings":"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","file":"class-controller-compiled.js","sourcesContent":["/**\n * Created by jonathan on 06/03/16.\n */\n'use strict';\n//TODO: I will change in future, I promise :)\n\nconst courseController   = require('../controller/courses-controller');\nconst studentsController = require('../controller/students-controller');\nconst validator          = require('validator');\nconst q                  = require('q');\nconst moment             = require('moment');\n\nmodule.exports.createClass =  (roomClass, callback) => {\n\n    let deferred = q.defer();\n\n    let objRet = validateCourse(roomClass) && validateStudents(roomClass['class']);\n\n    if (Object.keys(objRet).length !== 0){\n        deferred.reject(objRet);\n    }\n    else {\n        let actualCourse = null;\n        courseController.getById(roomClass['_id'])\n            .then( (course) => {\n                actualCourse = course;\n                let classCourse = [];\n                for (let i = 0, length = roomClass['class'].length; i < length; i++) {\n                    if (!studentExistsInCourse(roomClass['class'][i], course.class)) {\n                        classCourse.push(roomClass['class'][i]);\n                    }\n                }\n                return studentsController.getByList(classCourse);\n            },\n             (err) => {\n                deferred.reject(err);\n            })\n            .then( (students) => {\n                return saveStudentsCourse(roomClass['_id'], students);\n            },\n            (err)=> {\n                deferred.reject(err);\n            })\n            .then( (students) => {\n                return saveCourseClass(actualCourse, students);\n            },\n            (err)=> {\n                deferred.reject(err);\n            })\n            .then( (students) => {\n                deferred.resolve(students);\n            },\n             (err) => {\n                deferred.reject(err);\n            });\n    }\n\n    deferred.promise.nodeify(callback);\n    return deferred.promise;\n};\n\nconst saveCourseClass =  (course, students, callback) => {\n    let deferred = q.defer();\n    if (students.length > 0) {\n        for (let i = 0, length = students.length; i < length; i++) {\n            course.class.push({\n                _id: students[i]._id,\n                name: students[i].name\n            });\n        }\n        course.save( (err, course) => {\n            if (err)\n                deferred.reject('Não foi possível atualizar o curso.');\n            else\n                deferred.resolve(course);\n        })\n    }\n    else\n        deferred.resolve(course);\n\n    deferred.promise.nodeify(callback);\n    return deferred.promise;\n};\n\nconst saveStudentsCourse =  (id, students, callback) => {\n    let deferred = q.defer();\n    let async = require('async');\n    \n    async.eachSeries(students,  (student, done) => {\n\n        if (!studentHasCourse(id, student.courses)) {\n            student.courses.push({\n                _id: id,\n                active: 1,\n                duration: {\n                    start: moment(),\n                    end: null\n                }\n            });\n            student.save(done);\n        }\n\n    }, (err) => {\n        if (err)\n            deferred.reject(err);\n        else\n            deferred.resolve(students);\n    });\n\n    deferred.promise.nodeify(callback);\n    return deferred.promise;\n};\n\nconst studentHasCourse =  (id, courses) => {\n    if (courses > 0) {\n        for (let i = 0, length = courses.length; i < length; i++) {\n            if (courses[i]['_id'].toString() === id.toString()){\n                return true;\n            }\n        }\n    }\n\n    return false;\n};\n\nconst studentExistsInCourse =  (id, course) => {\n    for (let i = 0, length = course.length; i < length; i++) {\n        if (course[i]['_id'].toString() === id.toString()){\n            return true;\n        }\n    }\n    return false;\n};\n\nconst validateStudents =  (students) => {\n    let objRet = {};\n    if (students.length > 0) {\n        for (let i = 0, len = students.length; i < len; i++) {\n            students[i] = validator.trim(validator.escape(students[i].toString() || ''));\n\n            if (!validator.isMongoId(students[i])) {\n                objRet['students'] = \"Id do aluno informado é inválido.\";\n                break;\n            }\n        }\n    }\n    else {\n        objRet['students'] = \"Ao menos 1 aluno deve ser informado.\";\n    }\n    return objRet;\n};\n\nconst validateCourse =  (course) => {\n    let objRet = {};\n    course['_id'] = validator.trim(validator.escape(course['_id'].toString() || ''));\n\n    if (validator.isNull(course['_id']))\n        objRet['_id'] = \"Id do Curso é de preenchimento obrigatório.\";\n    else if (!validator.isMongoId(course['_id']))\n        objRet['_id'] = \"Id do Curso informado é inválido.\";\n\n    return objRet;\n};\n\nconst validateStudent = (clas)  => {\n    let objRet = {};\n    clas['_id'] = validator.trim(validator.escape(clas['_id'].toString() || ''));\n    clas['_idstudent'] = validator.trim(validator.escape(clas['_idstudent'].toString() || ''));\n\n    if (validator.isNull(clas['_id']))\n        objRet['_id'] = \"Id do Curso é de preenchimento obrigatório.\";\n    else if (!validator.isMongoId(clas['_id']))\n        objRet['_id'] = \"Id do Curso informado é inválido.\";\n\n    if (validator.isNull(clas['_idstudent']))\n        objRet['_idstudent'] = \"Id do aluno é de preenchimento obrigatório.\";\n    else if (!validator.isMongoId(clas['_idstudent']))\n        objRet['_idstudent'] = \"Id do aluno informado é inválido.\";\n\n    return objRet;\n};\n\nmodule.exports.deactiveStudent =  (clas, callback) => {\n    let deferred = q.defer();\n\n    let objRet = validateStudent(clas);\n    if (Object.keys(objRet).length !== 0){\n        deferred.reject(objRet);\n    }\n    else {\n        studentsController.getById(clas['_idstudent'])\n            .then( (student) => {\n                let found = false;\n                for (let i = 0, length = student.courses.length; i < length; i++) {\n                    if (student.courses[i]._id.toString() === clas['_id'].toString()) {\n                        student.courses[i].duration = {\n                            start: student.courses[i].duration.start,\n                            end: moment()\n                        };\n                        student.courses[i].active = 0;\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (found) {\n                    student.save( (err, student) => {\n                        if (err)\n                            deferred.reject(err);\n                        else\n                            deferred.resolve(student);\n                    });\n                }\n                else\n                    deferred.resolve(student);\n            },\n             (err) => {\n                deferred.reject(err);\n\n            });\n    }\n    deferred.promise.nodeify(callback);\n    return deferred.promise;\n};\n\nmodule.exports.activateStudent =  (clas, callback) => {\n    let deferred = q.defer();\n\n    let objRet = validateStudent(clas);\n    if (Object.keys(objRet).length !== 0){\n        deferred.reject(objRet);\n    }\n    else {\n        studentsController.getById(clas['_idstudent'])\n            .then( (student) => {\n                let found = false;\n                for (let i = 0, length = student.courses.length; i < length; i++) {\n                    if (student.courses[i]._id.toString() === clas['_id'].toString() &&\n                        student.courses[i].active === 0) {\n                        student.courses[i].duration = {\n                            start: student.courses[i].duration.start\n                        };\n                        student.courses[i].active = 1;\n                        found = true;\n                        break;\n                    }\n                }\n\n                if (found) {\n                    student.save( (err, student) => {\n                        if (err)\n                            deferred.reject(err);\n                        else\n                            deferred.resolve(student);\n                    });\n                }\n                else\n                    deferred.resolve(student);\n            },\n             (err) => {\n                deferred.reject(err);\n\n            });\n    }\n    deferred.promise.nodeify(callback);\n    return deferred.promise;\n};"]}