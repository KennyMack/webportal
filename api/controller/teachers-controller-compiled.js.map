{"version":3,"sources":["teachers-controller.js"],"names":[],"mappings":"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","file":"teachers-controller-compiled.js","sourcesContent":["/**\n * Created by jonathan on 03/03/16.\n */\n'use strict';\n\nconst teachersModel = require('../models/teachers-model');\nconst validator     = require('validator');\nconst utils         = require('../utils/utils');\nconst moment        = require('moment');\n\n// List all Teachers\nmodule.exports.listTeachers = () => {\n    return new Promise( (resolve, reject) => {\n        teachersModel.teachers.find({})\n            .exec()\n            .then(resolve, reject);\n    });\n};\n\nconst getById =  (id) => {\n    return new Promise( (resolve, reject) => {\n        teachersModel.teachers.findById(id)\n            .exec()\n            .then(resolve, reject);\n    });\n};\n\n// Get Teacher By Id\nmodule.exports.getById = getById;\n\n\n\n// Remove Teacher By Id\nmodule.exports.removeById = (id) => {\n    return new Promise( (resolve, reject) => {\n        teachersModel.teachers.findByIdAndRemove(id)\n            .exec()\n            .then(resolve, reject);\n    })\n};\n\n// Create a Teacher\nmodule.exports.createTeacher = (teacher) => {\n    return new Promise( (resolve, reject) => {\n        new teachersModel.teachers({\n            'identify': teacher['identify'],\n            'name': teacher['name'],\n            'gender': teacher['gender'],\n            'dob': teacher['dob'],\n            'active': teacher['active'],\n            'social_number': teacher['social_number']\n        }).save()\n            .then(resolve, reject);\n    });\n};\n\n// Update a Teacher\nmodule.exports.updateTeacher =  (teacher) => {\n    return new Promise( (resolve, reject) => {\n        let query = { _id: teacher['_id'] };\n        let data = {\n            'identify': teacher['identify'],\n            'name': teacher['name'],\n            'gender': teacher['gender'],\n            'dob': teacher['dob'],\n            'active': teacher['active'],\n            'social_number': teacher['social_number']\n        };\n\n        teachersModel.teachers.findOneAndUpdate(query, data, { upsert: false, new: true })\n            .exec()\n            .then(resolve, reject);\n    })\n\n\n};\n\n// Validate fields\nmodule.exports.validateTeacher =  (teacher, status) => {\n    return new Promise( (resolve, reject) => {\n\n        let objRet = {};\n\n        if (status !== utils.OPERATION_STATUS.DELETE &&\n            status !== utils.OPERATION_STATUS.SELECT) {\n            teacher['identify'] = validator.trim(validator.escape(teacher['identify'].toString() || ''));\n            teacher['name'] = validator.trim(validator.escape(teacher['name'].toString() || ''));\n            teacher['gender'] = validator.trim(validator.escape(teacher['gender'].toString() || ''));\n            teacher['dob'] = validator.trim(teacher['dob'].toString() || '');\n            teacher['social_number'] = validator.trim(validator.escape(teacher['social_number'].toString() || ''));\n            teacher['active'] = validator.trim(validator.escape(teacher['active'].toString() || ''));\n\n            if (validator.isNull(teacher['name']))\n                objRet['name'] = 'Nome é de preenchimento obrigatório.';\n\n            if (validator.isNull(teacher['identify']))\n                objRet['identify'] = 'Identificador é de preenchimento obrigatório.';\n\n            if (validator.isNull(teacher['gender']))\n                objRet['gender'] = 'Sexo é de preenchimento obrigatório.';\n            else if (!validator.isIn(teacher['gender'], ['M', 'F']))\n                objRet['gender'] = 'Sexo informado não é válido.';\n\n            if (validator.isNull(teacher['dob']))\n                objRet['dob'] = 'Data de nascimento é de preenchimento obrigatório.';\n            else if (!validator.isDate(teacher['dob']))\n                objRet['dob'] = 'Data de nascimento informada não é válida.';\n\n            if ((!validator.isNull(teacher['active'])) &&\n                (!validator.isIn(teacher['active'], [0, 1])))\n                objRet['active'] = 'Status informado não é válido.';\n\n        }\n\n        if (status === utils.OPERATION_STATUS.UPDATE ||\n            status === utils.OPERATION_STATUS.SELECT ||\n            status === utils.OPERATION_STATUS.DELETE) {\n            teacher['_id'] = validator.trim(validator.escape(teacher['_id'].toString() || ''));\n\n            let idNull = validator.isNull(teacher['_id']);\n\n            if (idNull)\n                objRet['_id'] = 'Id do professor é de preenchimento obrigatório.';\n\n            if (!idNull && (!validator.isMongoId(teacher['_id'])))\n                objRet['_id'] = 'Id do professor informado não é válido.';\n        }\n\n        if (Object.keys(objRet).length !== 0) {\n            reject(objRet)\n        }\n        else {\n            resolve(teacher);\n        }\n    });\n};\n\n// Validate Subject\nconst validateSubject =  (subject, status) => {\n    return new Promise( (resolve, reject) => {\n        let objRet = {};\n        subject['_id'] = validator.trim(validator.escape(subject['_id'].toString() || ''));\n        subject['_idsubject'] = validator.trim(validator.escape(subject['_idsubject'].toString() || ''));\n\n        if (status === utils.OPERATION_STATUS.NEW) {\n\n            subject['description'] = validator.trim(validator.escape(subject['description'].toString() || ''));\n\n            if (validator.isNull(subject['description']))\n                objRet['description'] = 'Descrição da Matéria é de preenchimento obrigatório.';\n\n\n        }\n\n        if (validator.isNull(subject['_idsubject']))\n            objRet['_idsubject'] = 'Id da materia é de preenchimento obrigatório.';\n        else if (!validator.isMongoId(subject['_idsubject']))\n            objRet['_idsubject'] = 'Id da materia informado é inválido.';\n\n        if (validator.isNull(subject['_id']))\n            objRet['_id'] = 'Id do Professor é de preenchimento obrigatório.';\n        else if (!validator.isMongoId(subject['_id']))\n            objRet['_id'] = 'Id do Professor informado é inválido.';\n\n        if (Object.keys(objRet).length !== 0) {\n            reject(objRet)\n        }\n        else {\n            resolve(subject);\n        }\n    });\n};\n\nconst addSubjectItem =  (teacher, subject) => {\n    return new Promise( (resolve, reject) => {\n        if (!teacher)\n            reject('404 - Not Found');\n        else {\n            teachersModel.teachers.find(\n                {\n                    '_id' : subject['_id'],\n                    'subjects._id': subject['_idsubject']\n                })\n                .exec()\n                .then( (result) => {\n                    if (result.length === 0) {\n                        teacher.subjects.push({\n                            _id: subject['_idsubject'],\n                            description: subject['description']\n                        });\n                        teacher.save()\n                            .then(resolve, reject);\n                    }\n                    else {\n                        reject({subject: \"Matéria já vinculada neste professor.\"});\n                    }\n\n                },  (err) => {\n                    reject(err);\n                })\n        }\n    });\n\n};\n\n\n// Add subjects to Course\nmodule.exports.addSubject = (subject) => {\n    return new Promise( (resolve, reject) => {\n\n        validateSubject(subject, utils.OPERATION_STATUS.NEW)\n            .then( (psubject) => {\n                return getById(psubject['_id']);\n            })\n            .then( (teacher) => {\n                return addSubjectItem(teacher, subject);\n            })\n            .then(resolve)\n            .catch(reject);\n    });\n};\n\n// Remove subject Item\nconst removeItemSubject =  (subject) => {\n    return new Promise( (resolve, reject) => {\n        const query = { _id: subject['_id'] };\n        const data = {\n            $pull: {\n                \"subjects\": {\n                    _id: subject['_idsubject']\n                }\n            }\n        };\n        const options = { safe: true, upsert: true, new: true };\n        teachersModel.teachers.findOneAndUpdate(query, data, options)\n            .exec()\n            .then(resolve, reject);\n\n    });\n};\n\n// Remove subjects of Course\nmodule.exports.removeSubject = (subject) => {\n    return new Promise( (resolve, reject) => {\n        validateSubject(subject, utils.OPERATION_STATUS.DELETE)\n            .then(removeItemSubject)\n            .then(resolve)\n            .catch(reject);\n\n    });\n};\n\n// Validate Schedule\nconst validateSchedule =  (item, status) => {\n    return new Promise( (resolve, reject) => {\n\n        let objRet = {};\n        if (status === utils.OPERATION_STATUS.NEW ||\n            status === utils.OPERATION_STATUS.UPDATE) {\n            item['day'] = validator.trim(validator.escape(item['day'].toString() || ''));\n            item['duration']['start'] = validator.trim(item['duration']['start'].toString() || '');\n            item['duration']['end'] = validator.trim(item['duration']['end'].toString() || '');\n\n\n            if (validator.isNull(item['day']))\n                objRet['day'] = 'Dia da semana é de preenchimento obrigatório.';\n            else if (!validator.isInt(item['day']))\n                objRet['day'] = 'Dia da semana informado é inválido.';\n            else if (!validator.isIn(item['day'], [1, 2, 3, 4, 5, 6, 7]))\n                objRet['day'] = 'Dia da semana informado é inválido.';\n\n            if (validator.isNull(item['duration']['start']))\n                objRet['start'] = 'Data de início é de preenchimento obrigatório.';\n            else if (!validator.isDate(item['duration']['start']))\n                objRet['start'] = 'Data de início informada não é válida.';\n\n\n            if (validator.isNull(item['duration']['end']))\n                objRet['end'] = 'Data de término é de preenchimento obrigatório.';\n            else if (!validator.isDate(item['duration']['end']))\n                objRet['end'] = 'Data de término informada não é válida.';\n        }\n        if (status === utils.OPERATION_STATUS.DELETE) {\n\n            item['_idschedule'] = validator.trim(validator.escape(item['_idschedule'].toString() || ''));\n            if (validator.isNull(item['_idschedule']))\n                objRet['_idschedule'] = 'Id do item do cronograma é de preenchimento obrigatório.';\n            else if (!validator.isMongoId(item['_idschedule']))\n                objRet['_idschedule'] = 'Id do item do cronograma informado é inválido.';\n        }\n\n        item['_id'] = validator.trim(validator.escape(item['_id'].toString() || ''));\n        if (validator.isNull(item['_id']))\n            objRet['_id'] = 'Id do Professor é de preenchimento obrigatório.';\n        else if (!validator.isMongoId(item['_id']))\n            objRet['_id'] = 'Id do Professor informado é inválido.';\n\n        if (Object.keys(objRet).length !== 0) {\n            reject(objRet);\n        }\n        else{\n            resolve(item);\n        }\n    });\n};\n\nconst getTeacherSchedule =  (item) => {\n    return new Promise( (resolve, reject) => {\n        getById(item['_id'])\n            .then( (teacher) => {\n                resolve({\n                    item: item,\n                    teacher: teacher\n                })\n            })\n            .catch(reject);\n    });\n};\n\nconst addScheduleItem =  (itemSchedule) => {\n    return new Promise( (resolve, reject) => {\n        itemSchedule.teacher.schedule.push({\n            day: itemSchedule.item['day'],\n            duration: {\n                start: moment(itemSchedule.item['duration']['start']).format('YYYY-MM-DD HH:mm:ss'),\n                end: moment(itemSchedule.item['duration']['end']).format('YYYY-MM-DD HH:mm:ss')\n            }\n        });\n\n        itemSchedule.teacher\n            .save()\n            .then(resolve, reject);\n\n    });\n};\n\n// Add Schedule to Teacher\nmodule.exports.addSchedule =  (item) => {\n    return new Promise( (resolve, reject) => {\n        validateSchedule(item, utils.OPERATION_STATUS.NEW)\n            .then(getTeacherSchedule)\n            .then(validateDateScheduleItem)\n            .then(addScheduleItem)\n            .then(resolve)\n            .catch(reject);\n    });\n};\n\nconst validateDateScheduleItem =  (itemSchedule) => {\n    return new Promise( (resolve, reject) => {\n        let objRet = {};\n        let candidateScheduleItem = {\n            start: moment(itemSchedule.item['duration']['start']).format('HH:mm:ss'),\n            end: moment(itemSchedule.item['duration']['end']).format('HH:mm:ss')\n        };\n        if (candidateScheduleItem.start >= candidateScheduleItem.end) {\n            objRet['duration'] = 'Período informado é inválido.';\n        }\n        else {\n            let teacher = itemSchedule.teacher;\n\n            for (let i = 0, length = teacher.schedule.length; i < length; i++) {\n                if (teacher.schedule[i].day == itemSchedule.item['day']) {\n\n                    let scheduleItem = {\n                        start: moment(teacher.schedule[i].duration.start).format('HH:mm:ss'),\n                        end: moment(teacher.schedule[i].duration.end).format('HH:mm:ss')\n                    };\n\n                    if (utils.betweenII(candidateScheduleItem.start, scheduleItem.start, scheduleItem.end)) {\n                        objRet['start'] = 'Já existe outra matéria vinculada neste Horário.';\n                    }\n\n                    if (utils.betweenII(candidateScheduleItem.end, scheduleItem.start, scheduleItem.end)) {\n                        objRet['end'] = 'Já existe outra matéria vinculada neste Horário.';\n                    }\n\n                    if (utils.betweenII(scheduleItem.start, candidateScheduleItem.start, candidateScheduleItem.end)) {\n                        objRet['end'] = 'Já existe outra matéria vinculada neste Horário.';\n                    }\n\n                    if (utils.betweenII(scheduleItem.end, candidateScheduleItem.start, candidateScheduleItem.end)) {\n                        objRet['end'] = 'Já existe outra matéria vinculada neste Horário.';\n                    }\n\n                    if (Object.keys(objRet).length !== 0) {\n                        break;\n                    }\n\n                    scheduleItem = null;\n                }\n            }\n            teacher = null;\n        }\n        if (Object.keys(objRet).length !== 0) {\n            reject(objRet);\n        }\n        else {\n            resolve(itemSchedule);\n        }\n        objRet = null;\n        candidateScheduleItem = null;\n\n    });\n};\n\nconst removeItemSchedule =  (schedule) => {\n    return new Promise( (resolve, reject) => {\n        const query = { _id: schedule['_id'] };\n        const data = {\n            $pull: {\n                \"schedule\": {\n                    _id: schedule['_idschedule']\n                }\n            }\n        };\n        const options = { safe: true, upsert: false, new: true };\n        teachersModel.teachers.findOneAndUpdate(query, data, options,  (err, data) => {\n            if (err) {\n                reject(err);\n            }\n            else {\n                resolve(data);\n            }\n        });\n    });\n};\n\n// Remove schedule of Teacher\nmodule.exports.removeSchedule = (item) => {\n    return new Promise( (resolve, reject) => {\n        validateSchedule(item, utils.OPERATION_STATUS.DELETE)\n            .then(removeItemSchedule)\n            .then(resolve)\n            .catch(reject);\n    });\n\n};\n"]}